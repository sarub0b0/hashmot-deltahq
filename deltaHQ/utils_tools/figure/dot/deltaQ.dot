digraph deltaQ {

    graph [
        layout = dot,
        rankdir = TB,
    ];

    node [
    ];

    edge [

    ];

    // node define
    scenario_deltaQ [shape = sdl_call];
    motion_apply [shape = sdl_call];
    wlan_connection_update [shape = sdl_call];
    connection_do_conmpute [shape = sdl_call];

    scenario_deltaQ [shape = sdl_call];
    motion_apply [shape = sdl_call];

//    for_connections [label = "for loop: connections", shape = diamond];


//    for_connections -> scenario_deltaQ [weight =5];
//    motion_apply -> for_connections [tailport = s, headport = n];

    scenario_deltaQ -> motion_apply [tailport = s, headport = n];
    motion_apply -> scenario_deltaQ [tailport = s, headport = n];
    scenario_deltaQ -> wlan_connection_update [tailport = e, headport = n];
    wlan_connection_update -> connection_do_conmpute [tailport = s, headport = n];



    {
        rank = min;
        scenario_deltaQ;
    }
    {
        rank = same;
        motion_apply;
    }
    {
        rank = same;
        wlan_connection_update;
    }
    {
        rank = max;
        connection_do_conmpute;
    }

}
